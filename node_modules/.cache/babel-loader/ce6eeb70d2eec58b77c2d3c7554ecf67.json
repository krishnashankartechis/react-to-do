{"ast":null,"code":"import _objectSpread from\"/Users/techi.s./Desktop/react-to-do/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/Users/techi.s./Desktop/react-to-do/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/techi.s./Desktop/react-to-do/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import\"./App.css\";import{useState,useEffect}from\"react\";import{Task}from\"./Task\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// const [todoList, setTodoList] = useState([]);\nvar _useState=useState(function(){var saved=localStorage.getItem('key1');var savedvalues=JSON.parse(saved);return savedvalues;}),_useState2=_slicedToArray(_useState,2),todoList=_useState2[0],setTodoList=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),newTask=_useState4[0],setNewTask=_useState4[1];var handleChange=function handleChange(event){setNewTask(event.target.value);};useEffect(function(){window.localStorage.setItem(\"key1\",JSON.stringify(todoList));},[todoList]);useEffect(function(){var mydata=window.localStorage.getItem('key1');if(mydata)setTodoList(JSON.parse(mydata));},[]);// since we can't add the data in array or list in react using normal list or array methods\n// we have to modify the state of the list here, so we have to use a set method to modify the state of the already existing array.\nvar addTask=function addTask(){// triple dots in react mean include everything that is present in in the list and add to the newTask.\n//const newTodoList = [...todoList, newTask];\n//setTodoList(newTodoList);\nvar task={id:todoList.length==0?1:todoList[todoList.length-1].id+1,taskName:newTask,completed:false};setTodoList([].concat(_toConsumableArray(todoList),[task]));// we can use the above code block as well this is simpler and shorter way to achive the task that is\n// to add exiting list task with a newt task\n};// const completeTask = (id) => {\n//   setTodoList(\n//     todoList.map((task)=>{\n//       if(task.id === id){\n//         return{...task,completed:true};\n//       } \n//       else{\n//         return task;\n//       }\n//     })\n//   )\n//   }\nvar completeTask=function completeTask(id){setTodoList(todoList.map(function(task){if(task.id===id){return _objectSpread(_objectSpread({},task),{},{completed:true});}else{return task;}}));};var deleteTask=function deleteTask(id){// const newTodoList = todoList.filter((task)=> task!== taskName); \n// const newTodoList = todoList.filter((task) =>{\n//   if (task === taskName){\n//     return false;}\n//   else{\n//     return true;}\n// })\n// setTodoList(newTodoList);\nsetTodoList(todoList.filter(function(task){return task.id!==id;}));};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"addTask\",children:[/*#__PURE__*/_jsx(\"input\",{onChange:handleChange}),\" \",/*#__PURE__*/_jsx(\"button\",{onClick:addTask,children:\"Add Task \"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"list\",children:todoList&&todoList.map(function(task){return/*#__PURE__*/_jsx(Task,{taskName:task.taskName,id:task.id,completed:task.completed,deleteTask:deleteTask,completeTask:completeTask});// return (<div><h1> {task.taskName} </h1><button onClick={()=> deleteTask(task.id)}>X</button></div>);\n})})]});}export default App;","map":{"version":3,"names":["useState","useEffect","Task","App","saved","localStorage","getItem","savedvalues","JSON","parse","todoList","setTodoList","newTask","setNewTask","handleChange","event","target","value","window","setItem","stringify","mydata","addTask","task","id","length","taskName","completed","completeTask","map","deleteTask","filter"],"sources":["/Users/techi.s./Desktop/react-to-do/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState, useEffect} from \"react\";\nimport {Task} from \"./Task\"\n\nfunction App() {\n  // const [todoList, setTodoList] = useState([]);\n\n  const [todoList, setTodoList] = useState(()=>{\n    const saved=localStorage.getItem('key1')\n    const savedvalues=JSON.parse(saved)\n    return savedvalues\n  });\n\n\n  const [newTask, setNewTask] = useState([]);\n\n\n\n  const handleChange = (event) => {\n    setNewTask(event.target.value);\n  };\n\n\n  useEffect(()=>{\n     \n    window.localStorage.setItem(\"key1\",JSON.stringify(todoList))},\n    [todoList]);\n\n    useEffect(()=>{\n      const mydata = window.localStorage.getItem('key1');\n      if (mydata)\n      setTodoList(JSON.parse(mydata))}\n    ,[]);\n\n  // since we can't add the data in array or list in react using normal list or array methods\n  // we have to modify the state of the list here, so we have to use a set method to modify the state of the already existing array.\n  const addTask = () => {\n    // triple dots in react mean include everything that is present in in the list and add to the newTask.\n    //const newTodoList = [...todoList, newTask];\n    //setTodoList(newTodoList);\n\n    const task={\n      id: todoList.length == 0 ? 1 :   todoList[todoList.length-1].id+1,\n      taskName: newTask,\n      completed: false,\n    };\n\n\n    setTodoList([...todoList,task]);\n    // we can use the above code block as well this is simpler and shorter way to achive the task that is\n    // to add exiting list task with a newt task\n  };\n\n  // const completeTask = (id) => {\n  //   setTodoList(\n  //     todoList.map((task)=>{\n  //       if(task.id === id){\n  //         return{...task,completed:true};\n  //       } \n  //       else{\n  //         return task;\n  //       }\n  //     })\n  //   )\n  //   }\n  const completeTask = (id) => {\n    setTodoList(\n      todoList.map((task) => {\n        if (task.id === id) {\n          return { ...task, completed: true };\n        } else {\n          return task;\n        }\n      })\n    );\n  };\n\n\n\n  const deleteTask=(id)=>{\n    // const newTodoList = todoList.filter((task)=> task!== taskName); \n\n    // const newTodoList = todoList.filter((task) =>{\n    //   if (task === taskName){\n    //     return false;}\n    //   else{\n    //     return true;}\n      // })\n\n      // setTodoList(newTodoList);\n      setTodoList(todoList.filter((task)=> task.id !== id));\n    \n\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"addTask\">\n        <input onChange={handleChange} /> <button onClick={(addTask)}>Add Task </button>\n        {/* in react when we use a function on click that uses some parameters we have to put it like ()=>funciton, so it call a function that does a certain task. */}\n      </div>\n      <div className=\"list\">\n        {todoList && todoList.map((task) => { return  <Task \n          taskName={task.taskName} \n          id={task.id} \n          completed={task.completed}\n          deleteTask={deleteTask} \n          completeTask={completeTask} />\n          // return (<div><h1> {task.taskName} </h1><button onClick={()=> deleteTask(task.id)}>X</button></div>);\n          \n         \n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}